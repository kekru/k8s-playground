# based on https://github.com/robszumski/k8s-service-proxy

#user www-data;
#worker_processes 4;
#pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

stream {
   

  map $ssl_preread_server_name $targetSniName {
    ~^(?<service>.+)-(?<deployment>.+)-(?<namespace>.+)\.BASE_URL$     whiledo.de:443;
    default                  error-service.local:8080; 
  }

  map $ssl_server_name $targetSslName {
    ~^(?<service>.+)-(?<deployment>.+)-(?<namespace>.+)\.BASE_URL$     $service-$deployment-public.$namespace.svc.cluster.local.192.168.0.150.nip.io:9876;
    default                  error-service.local:8080; 
  }

   
  # terminate the ssl connection
  server {
	  listen 443 ssl; 
    ssl_protocols       TLSv1.2;
    # ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    ssl_certificate     /certs/server-cert.pem;
    ssl_certificate_key /certs/server-key.pem;
    # ssl_session_cache   shared:SSL:10m;
     # ssl_session_timeout 10m;
        
    proxy_connect_timeout 1s;
    proxy_timeout 3s;
    #   resolver        DNS_RESOLVER;
    resolver 1.1.1.1;
      
    proxy_pass $targetSslName;
  }

  # only read SNI and pass through the ssl stream
  server {
	  listen 8080; 
    ssl_protocols       TLSv1.2;
    # ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    ssl_certificate     /certs/server-cert.pem;
    ssl_certificate_key /certs/server-key.pem;
    # ssl_session_cache   shared:SSL:10m;
     # ssl_session_timeout 10m;
        
    proxy_connect_timeout 1s;
    proxy_timeout 3s;
    #   resolver        DNS_RESOLVER;
    resolver 1.1.1.1;
      
    proxy_pass $targetSniName;
           
    ssl_preread on;
  }
}